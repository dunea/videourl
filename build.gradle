plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
    id 'org.springframework.boot' version '3.0.0'  // 版本可以根据需要调整
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'  // 设置 JDK 版本，如果你使用的是其他版本，进行调整

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }  // 使用阿里云仓库
    mavenCentral()  // 使用 Maven 中央仓库
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 测试支持
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA 支持
    implementation 'org.springframework.boot:spring-boot-starter-web'  // Web 支持
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'  // 如果需要模板引擎支持
    implementation 'mysql:mysql-connector-java:8.0.33'  // MySQL 驱动
    implementation 'org.springframework.boot:spring-boot-starter-logging'  // 日志支持
    implementation 'net.bramp.ffmpeg:ffmpeg:0.8.0' // ffmpeg调用库
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8' // 本地键值对缓存库
    implementation 'org.springframework.boot:spring-boot-starter-cache' // spring缓存库
    implementation 'com.google.guava:guava:32.1.3-jre' // 响应并发队列缓存
}

test {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}